{"ast":null,"code":"import _objectSpread from\"/Users/bipulb/Desktop/Cosmico-Backend-main/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import ChatInterface from'../components/ChatInterface';import{sendMessageToAI}from'../api/chatApi';// ‚úÖ Make sure this exists\nimport'../index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatPage=()=>{const[showIntro,setShowIntro]=useState(true);const[chats,setChats]=useState([{id:1,messages:[]}]);const[currentChatId,setCurrentChatId]=useState(1);useEffect(()=>{const timer=setTimeout(()=>setShowIntro(false),4000);return()=>clearTimeout(timer);},[]);const handleNewChat=()=>{const newId=chats.length+1;setChats(prev=>[...prev,{id:newId,messages:[]}]);setCurrentChatId(newId);};const handleSendMessage=async userText=>{const newUserMessage={role:'user',content:userText};const currentMessages=currentChat.messages;const updatedMessages=[...currentMessages,newUserMessage];updateMessages(updatedMessages);try{const aiReply=await sendMessageToAI(userText);const newAiMessage={role:'assistant',content:aiReply};updateMessages([...updatedMessages,newAiMessage]);}catch(err){updateMessages([...updatedMessages,{role:'assistant',content:'‚ö†Ô∏è Error connecting to AI. Please try again.'}]);}};const updateMessages=updatedMessages=>{setChats(prev=>prev.map(chat=>chat.id===currentChatId?_objectSpread(_objectSpread({},chat),{},{messages:updatedMessages}):chat));};const currentChat=chats.find(chat=>chat.id===currentChatId);return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen bg-black text-white overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars absolute top-0 left-0 w-full h-full z-0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"twinkling absolute top-0 left-0 w-full h-full z-0\"}),showIntro&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1/2 left-1/2 transform -translate-x-1/2 text-4xl md:text-6xl font-extrabold z-20 animate-welcome text-transparent bg-clip-text bg-gradient-to-r from-[#FFB200] via-[#EB5B00] to-[#E52020]\",children:\"WELCOME TO COSMICO\"}),!showIntro&&/*#__PURE__*/_jsx(\"div\",{className:\"relative z-10 flex items-center justify-center min-h-screen px-4 animate-fade-in\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-6xl h-[90vh] rounded-3xl border border-white/10 bg-black/50 backdrop-blur-md shadow-xl flex overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-[260px] bg-gradient-to-b from-[#1f1f1f]/80 to-[#2c2c2c]/60 border-r border-white/10 p-4 flex flex-col justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-[#FFB200]\",children:\"CosmicoBot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-[60vh] overflow-y-auto pr-1\",children:chats.map(chat=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>setCurrentChatId(chat.id),className:\"cursor-pointer text-sm px-3 py-2 rounded-lg \".concat(chat.id===currentChatId?\"bg-[#3a3a3a] text-white font-medium\":\"hover:bg-[#2a2a2a] text-white/70\"),children:[\"Chat \",chat.id]},chat.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNewChat,className:\"mt-4 w-full text-sm py-1 rounded-md bg-[#FFB200]/10 hover:bg-[#FFB200]/20 text-[#FFB200] border border-[#FFB200]/50\",children:\"+ New Chat\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-white/60 text-center mt-4\",children:\"Log In\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col\",children:/*#__PURE__*/_jsx(ChatInterface,{messages:currentChat.messages,onUpdateMessages:updateMessages,onSendMessage:handleSendMessage// ‚úÖ now active\n},currentChat.id)})]})})]});};export default ChatPage;","map":{"version":3,"names":["React","useEffect","useState","ChatInterface","sendMessageToAI","jsx","_jsx","jsxs","_jsxs","ChatPage","showIntro","setShowIntro","chats","setChats","id","messages","currentChatId","setCurrentChatId","timer","setTimeout","clearTimeout","handleNewChat","newId","length","prev","handleSendMessage","userText","newUserMessage","role","content","currentMessages","currentChat","updatedMessages","updateMessages","aiReply","newAiMessage","err","map","chat","_objectSpread","find","className","children","onClick","concat","onUpdateMessages","onSendMessage"],"sources":["/Users/bipulb/Desktop/Cosmico-Backend-main/Frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ChatInterface from '../components/ChatInterface';\nimport { sendMessageToAI } from '../api/chatApi'; // ‚úÖ Make sure this exists\nimport '../index.css';\n\nconst ChatPage = () => {\n  const [showIntro, setShowIntro] = useState(true);\n  const [chats, setChats] = useState([{ id: 1, messages: [] }]);\n  const [currentChatId, setCurrentChatId] = useState(1);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShowIntro(false), 4000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleNewChat = () => {\n    const newId = chats.length + 1;\n    setChats(prev => [...prev, { id: newId, messages: [] }]);\n    setCurrentChatId(newId);\n  };\n\n  const handleSendMessage = async (userText) => {\n    const newUserMessage = { role: 'user', content: userText };\n    const currentMessages = currentChat.messages;\n    const updatedMessages = [...currentMessages, newUserMessage];\n\n    updateMessages(updatedMessages);\n\n    try {\n      const aiReply = await sendMessageToAI(userText);\n      const newAiMessage = { role: 'assistant', content: aiReply };\n      updateMessages([...updatedMessages, newAiMessage]);\n    } catch (err) {\n      updateMessages([\n        ...updatedMessages,\n        { role: 'assistant', content: '‚ö†Ô∏è Error connecting to AI. Please try again.' },\n      ]);\n    }\n  };\n\n  const updateMessages = (updatedMessages) => {\n    setChats(prev =>\n      prev.map(chat =>\n        chat.id === currentChatId ? { ...chat, messages: updatedMessages } : chat\n      )\n    );\n  };\n\n  const currentChat = chats.find(chat => chat.id === currentChatId);\n\n  return (\n    <div className=\"relative min-h-screen bg-black text-white overflow-hidden\">\n      {/* ‚≠ê Background */}\n      <div className=\"stars absolute top-0 left-0 w-full h-full z-0\"></div>\n      <div className=\"twinkling absolute top-0 left-0 w-full h-full z-0\"></div>\n\n      {/* üå† Welcome Text */}\n      {showIntro && (\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 text-4xl md:text-6xl font-extrabold z-20 animate-welcome text-transparent bg-clip-text bg-gradient-to-r from-[#FFB200] via-[#EB5B00] to-[#E52020]\">\n          WELCOME TO COSMICO\n        </div>\n      )}\n\n      {/* üí¨ Main Chat Layout */}\n      {!showIntro && (\n        <div className=\"relative z-10 flex items-center justify-center min-h-screen px-4 animate-fade-in\">\n          <div className=\"w-full max-w-6xl h-[90vh] rounded-3xl border border-white/10 bg-black/50 backdrop-blur-md shadow-xl flex overflow-hidden\">\n            \n            {/* üöÄ Sidebar */}\n            <div className=\"w-[260px] bg-gradient-to-b from-[#1f1f1f]/80 to-[#2c2c2c]/60 border-r border-white/10 p-4 flex flex-col justify-between\">\n              <div>\n                <h2 className=\"text-xl font-bold mb-4 text-[#FFB200]\">CosmicoBot</h2>\n                <div className=\"space-y-2 max-h-[60vh] overflow-y-auto pr-1\">\n                  {chats.map(chat => (\n                    <div\n                      key={chat.id}\n                      onClick={() => setCurrentChatId(chat.id)}\n                      className={`cursor-pointer text-sm px-3 py-2 rounded-lg ${\n                        chat.id === currentChatId\n                          ? \"bg-[#3a3a3a] text-white font-medium\"\n                          : \"hover:bg-[#2a2a2a] text-white/70\"\n                      }`}\n                    >\n                      Chat {chat.id}\n                    </div>\n                  ))}\n                </div>\n                <button\n                  onClick={handleNewChat}\n                  className=\"mt-4 w-full text-sm py-1 rounded-md bg-[#FFB200]/10 hover:bg-[#FFB200]/20 text-[#FFB200] border border-[#FFB200]/50\"\n                >\n                  + New Chat\n                </button>\n              </div>\n              <div className=\"text-xs text-white/60 text-center mt-4\">Log In</div>\n            </div>\n\n            {/* üí¨ ChatInterface */}\n            <div className=\"flex-1 flex flex-col\">\n              <ChatInterface\n                key={currentChat.id}\n                messages={currentChat.messages}\n                onUpdateMessages={updateMessages}\n                onSendMessage={handleSendMessage} // ‚úÖ now active\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}